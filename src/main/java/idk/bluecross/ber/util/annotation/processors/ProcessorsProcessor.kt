package idk.bluecross.ber.util.annotation.processors

import idk.bluecross.ber.BebraExploitReborn
import idk.bluecross.ber.util.annotation.processors.AutoInitProcessor.IProcessor
import idk.bluecross.ber.util.annotation.processors.AutoInitProcessor.InitProcessor
import idk.bluecross.ber.util.annotation.processors.AutoInitProcessor.PostInitProcessor
import idk.bluecross.ber.util.annotation.processors.AutoInitProcessor.PreInitProcessor
import org.reflections.Reflections


object ProcessorsProcessor
/** BRUH */
    : IProcessor {
    val subtypes = Reflections(reflections.getSubTypesOf(IProcessor::class.java))

    override fun process() {
        when (BebraExploitReborn.modState) {
            BebraExploitReborn.ModState.PRE_INIT -> {
                subtypes.getTypesAnnotatedWith(PreInitProcessor::class.java).forEach {
                    (it.kotlin.objectInstance as? IProcessor?)?.process()
                }
            }

            BebraExploitReborn.ModState.INIT -> {
                subtypes.getTypesAnnotatedWith(InitProcessor::class.java).forEach {
                    (it.kotlin.objectInstance as? IProcessor?)?.process()
                }
            }

            BebraExploitReborn.ModState.POST_INIT -> {
                subtypes.getTypesAnnotatedWith(PostInitProcessor::class.java).forEach {
                    (it.kotlin.objectInstance as? IProcessor?)?.process()
                }
            }
        }
    }
}