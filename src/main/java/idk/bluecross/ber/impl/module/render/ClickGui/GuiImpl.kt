package idk.bluecross.ber.impl.module.render.ClickGui

import idk.bluecross.ber.api.module.ClickGui.IClickGuiModule
import idk.bluecross.ber.api.module.IModuleData
import idk.bluecross.ber.impl.module.render.ClickGui.modules.AbstractGuiModule
import idk.bluecross.ber.impl.module.render.ClickGui.modules.CategoryGuiModule
import net.minecraft.client.gui.GuiScreen
import java.awt.Color

object GuiImpl : GuiScreen() {
    override fun doesGuiPauseGame() = false

    val categoryModuleTest = CategoryGuiModule(50, 50, IModuleData.Category.RENDER, ColorDto(
            Color(115, 15, 15, 200),
            Color(150, 0, 0),
            Color.WHITE
    ))
    override fun initGui() {
        println("initgui")
        super.initGui()
    }

    override fun onGuiClosed() {
        AbstractGuiModule.modules.forEach(AbstractGuiModule::close)
        ClickGui.disable()
        super.onGuiClosed()
    }

    override fun drawScreen(mouseX: Int, mouseY: Int, partialTicks: Float) {
        categoryModuleTest.draw(mouseX, mouseY, partialTicks)
        super.drawScreen(mouseX, mouseY, partialTicks)
    }

    override fun mouseClicked(mouseX: Int, mouseY: Int, mouseButton: Int) {
        super.mouseClicked(mouseX, mouseY, mouseButton)
        AbstractGuiModule.modules.filter {
            ClickGuiUtil.isClicked(it, mouseX, mouseY)
        }.forEach { it.handleClick(mouseX, mouseY, mouseButton) }
    }

    override fun mouseReleased(mouseX: Int, mouseY: Int, state: Int) {
        AbstractGuiModule.modules.forEach { it.handleMouseRelease(mouseX, mouseY, state) }
        super.mouseReleased(mouseX, mouseY, state)
    }
}