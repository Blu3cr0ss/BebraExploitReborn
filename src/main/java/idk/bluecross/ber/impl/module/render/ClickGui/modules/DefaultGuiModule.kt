package idk.bluecross.ber.impl.module.render.ClickGui.modules

import idk.bluecross.ber.api.module.IModuleData
import idk.bluecross.ber.impl.module.render.ClickGui.modules.AbstractGuiModule
import idk.bluecross.ber.util.interfaces.Globals.mc
import net.minecraft.client.gui.Gui
import java.awt.Color

abstract class DefaultGuiModule(
        override var text: String,
        override var posX: Int,
        override var posY: Int,
        override var sizeX: Int,
        override var sizeY: Int,
        override var borderSize: Int,
        override var borders: Boolean,
        override var bgColor: Color,
        override var borderColor: Color,
        override var textColor: Color
) : AbstractGuiModule() {
    fun textPosXInc() = (sizeX - mc.fontRenderer.getStringWidth(text)) / 2
    fun textPosYInc() = (sizeY - mc.fontRenderer.FONT_HEIGHT) / 2 + 1
    override fun draw(mouseX: Int, mouseY: Int, partialTicks: Float) {
        if (borders) drawBorders(mouseX, mouseY, partialTicks)

        Gui.drawRect(posX, posY, posX + sizeX, posY + sizeY, bgColor.hashCode())
        mc.fontRenderer.drawString(text, posX + textPosXInc(), posY + textPosYInc(), textColor.hashCode())
    }

    open fun draw(mouseX: Int, mouseY: Int, partialTicks: Float, dragging: Boolean, xOffset: Int, yOffset: Int) {
        if (dragging) {
            posX = mouseX - xOffset
            posY = mouseY - yOffset
        }
        draw(mouseX, mouseY, partialTicks)
    }

    override fun drawBorders(mouseX: Int, mouseY: Int, partialTicks: Float) {
        Gui.drawRect(posX - borderSize, posY - borderSize, posX + sizeX + borderSize, posY, borderColor.hashCode()) // TOP BORDER
        Gui.drawRect(posX - borderSize, posY + -borderSize, posX, posY + sizeY + borderSize, borderColor.hashCode()) // LEFT BORDER
        Gui.drawRect(posX + sizeX, posY - borderSize, posX + sizeX + borderSize, posY + sizeY + borderSize, borderColor.hashCode()) // RIGHT BORDER
        Gui.drawRect(posX - borderSize, posY + sizeY, posX + sizeX + borderSize, posY + sizeY + borderSize, borderColor.hashCode()) // BOTTOM BORDER
    }
}